9/14/15
I successfully implemented a hill climber for GRNs, but I am plagued by chaos issues. I will meet with Dr. Bongard tomorrow, but in order to find a reasonable max_cycle value (my cutoff for passing verdict on the chaotic nature of a network) I will devise a test: Initialize a sample of random new networks as in text, and run each once. I will set the cutoff to be very high, and see the distribution of cycle length. I suspect that most networks will be chaotic, and those that are not will all be relatively low, say single digits of iterations. This will give me a good cutoff point to make chaotic networks less computationally expensive.

Here are the results of my experiment, with a single fixed starting node state, and 
Trial 1:
	pop_size=5000
	max_cycle=500
	starting node state: [1,-1,1,1,-1,-1,1,-1,1,1]

100%
0 : 662
1 : 470
2 : 208
3 : 151
4 : 72
5 : 51
6 : 28
7 : 11
8 : 7
9 : 4
10 : 2
13 : 1
500 : 3333

Trial 2:

	pop_size=5000
	max_cycle=500
	starting node state: [1,1,1,1,1,1,1,1,1,1]

100%
0 : 665
1 : 411
2 : 211
3 : 130
4 : 68
5 : 37
6 : 26
7 : 12
8 : 7
9 : 4
10 : 2
11 : 1
12 : 2
15 : 1
500 : 3423

This is somewhat discouraging. Will verify if this is a fault of the model or points to a bug in my implementation.


Efficiency: major issue. Among other optimizations, I need to parallelize this project, I'm only using one of 4 cores currently.